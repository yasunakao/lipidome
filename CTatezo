{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Copy of simple_dl.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/yasunakao/lipidome/blob/main/CTatezo\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Niaz8_W6OX34"
      },
      "source": [
        "# シンプルなディープラーニング\n",
        "PyTorchを使って簡単なディープラーニングを実装します。  \n",
        "今回は、ディープラーニングにより手書き文字の認識を行います。\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "x9Gzbn25XSlF"
      },
      "source": [
        "### 手書き文字画像の確認\n",
        "scikit-learnから、手書き数字の画像データを読み込んで表示します。  "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1xilDxx6kjte",
        "outputId": "5b331164-7330-4326-a938-523d9235895b"
      },
      "source": [
        "# ファイルの入出力用にglobをインポート\n",
        "import glob\n",
        " \n",
        "file_path = '/content/drive/MyDrive/CTatezo'\n",
        "files = glob.glob(file_path + '/*')\n",
        "print(files)\n"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hLwhUOGckr6e",
        "outputId": "6baf51d3-75be-4c24-f59b-6e016af71e67"
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import os\n",
        "import cv2\n",
        "print(os.getcwd())"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 422
        },
        "id": "pr9Vb9xzktNR",
        "outputId": "69f2d690-666e-47d6-91a9-2a1a755d66e9"
      },
      "source": [
        "DATADIR = \"/content/drive/MyDrive/CTatezo\"\n",
        "CATEGORIES = [\"SD\",\"PD\"]\n",
        "for category in CATEGORIES:\n",
        "    path = os.path.join(DATADIR, category)\n",
        "    for image_name in os.listdir(path):\n",
        "        img_array = cv2.imread(os.path.join(path, image_name), cv2.IMREAD_GRAYSCALE)\n",
        "        plt.imshow(img_array, cmap=\"gray\")\n",
        "        plt.show()\n",
        "        break\n",
        "    break\n",
        "  \n",
        "print(img_array.shape)\n",
        "print(img_array)\n",
        "print(img_array.size)"
      ],
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(512, 512)\n",
            "[[0 0 0 ... 0 0 0]\n",
            " [0 0 0 ... 0 0 0]\n",
            " [0 0 0 ... 0 0 0]\n",
            " ...\n",
            " [0 0 0 ... 0 0 0]\n",
            " [0 0 0 ... 0 0 0]\n",
            " [0 0 0 ... 0 0 0]]\n",
            "262144\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 332
        },
        "id": "Tiwd2bJ_k_Bg",
        "outputId": "bf4ac4d3-6403-47bd-c081-286b4d111997"
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import os\n",
        "import cv2\n",
        "import random\n",
        "import numpy as np\n",
        "\n",
        "\n",
        "DATADIR = \"/content/drive/MyDrive/CTatezo\"\n",
        "CATEGORIES = [\"SD\",\"PD\"]\n",
        "#IMG_SIZE = 64\n",
        "training_data = []\n",
        "\n",
        "# 0=SD 1=PD\n",
        "\n",
        "def create_training_data():\n",
        "    for class_num, category in enumerate(CATEGORIES):\n",
        "        path = os.path.join(DATADIR, category)\n",
        "        for image_name in os.listdir(path):\n",
        "            try:\n",
        "                img_array = cv2.imread(os.path.join(path, image_name), cv2.IMREAD_GRAYSCALE)  # 画像読み込み\n",
        "                img_resize_array = cv2.resize(img_array, (IMG_SIZE, IMG_SIZE))  # 画像のリサイズ\n",
        "                training_data.append([img_resize_array, class_num])  # 画像データ、ラベル情報を追加\n",
        "            except Exception as e:\n",
        "                pass\n",
        "\n",
        "create_training_data()\n",
        "\n",
        "random.shuffle(training_data)  # データをシャッフル\n",
        "\n",
        "X_train = []  # 画像データ\n",
        "y_train = []  # ラベル情報\n",
        "\n",
        "# データセット作成\n",
        "for feature, label in training_data:\n",
        "    X_train.append(feature)\n",
        "    y_train.append(label)\n",
        "\n",
        "# numpy配列に変換\n",
        "X_train = np.array(X_train)\n",
        "y_train = np.array(y_train)\n",
        "\n",
        "# データセットの確認\n",
        "for i in range(0, 4):\n",
        "    print(\"学習データのラベル：\", y_train[i])\n",
        "    plt.subplot(2, 2, i+1)\n",
        "    plt.axis('off')\n",
        "    plt.title(label = 'SD' if y_train[i] == 0 else 'PD')\n",
        "    plt.imshow(X_train[i], cmap='gray')\n",
        "\n",
        "plt.show()"
      ],
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "学習データのラベル： 1\n",
            "学習データのラベル： 0\n",
            "学習データのラベル： 0\n",
            "学習データのラベル： 1\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 4 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GXDvE6Bwkx5E",
        "outputId": "bb7ecaf6-858a-4d19-d821-92d142453804"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "81Il03RNAmbS",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        },
        "outputId": "bc5ee228-9c1d-4d6f-fe0f-368ec9c078ee"
      },
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn import datasets\n",
        "\n",
        "digits_data = datasets.load_digits()\n",
        "\n",
        "n_img = 10  # 表示する画像の数\n",
        "plt.figure(figsize=(10, 4))\n",
        "for i in range(n_img):\n",
        "    ax = plt.subplot(2, 5, i+1)\n",
        "    plt.imshow(digits_data.data[i].reshape(8, 8), cmap=\"Greys_r\")\n",
        "    ax.get_xaxis().set_visible(False)  # 軸を非表示に\n",
        "    ax.get_yaxis().set_visible(False)\n",
        "plt.show()\n",
        "\n",
        "print(\"データの形状:\", digits_data.data.shape)\n",
        "print(\"ラベル:\", digits_data.target[:n_img])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 720x288 with 10 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "データの形状: (1797, 64)\n",
            "ラベル: [0 1 2 3 4 5 6 7 8 9]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "sFWHMOf2D4b1"
      },
      "source": [
        "8×8とサイズは小さいですが、0から9までの手書き数字の画像が表示されました。このような手書き数字の画像が、このデータセットには1797枚含まれています。  \n",
        "また、各画像は描かれた数字を表すラベルとペアになっています。  \n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "w40h1X0FXmrh"
      },
      "source": [
        "## データを訓練用とテスト用に分割\n",
        "scikit-learnのtrain_test_splitを使って、データを訓練用とテストに分割します。"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GLGwXks542pJ"
      },
      "source": [
        "import torch\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "digit_images = X_train\n",
        "labels = y_train\n",
        "x_train, x_test, t_train, t_test = train_test_split(digit_images, labels)  # 25%がテスト用\n",
        "\n",
        "# Tensorに変換\n",
        "x_train = torch.tensor(x_train, dtype=torch.float32)\n",
        "t_train = torch.tensor(t_train, dtype=torch.int64) \n",
        "x_test = torch.tensor(x_test, dtype=torch.float32)\n",
        "t_test = torch.tensor(t_test, dtype=torch.int64) "
      ],
      "execution_count": 52,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NzxYXVcfl9ld",
        "outputId": "571889fc-a115-4b6a-ed47-49da0755c84a"
      },
      "source": [
        "print(x_train.shape)\n",
        "print(y_train.shape)"
      ],
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "torch.Size([162, 64, 64])\n",
            "(216,)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FalXNYaJPkoE"
      },
      "source": [
        "## モデルの構築\n",
        "`nn`モジュールの`Sequential`クラスによりモデルを構築します。"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SuqqZmsh_jNK",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2dbe7b64-1928-46aa-9b91-7e255ccfce95"
      },
      "source": [
        "from torch import nn\n",
        "\n",
        "net = nn.Sequential(\n",
        "    nn.Flatten(),\n",
        "    nn.Linear(64*64, 64),  # 全結合層\n",
        "    nn.ReLU(),          # ReLU\n",
        "    nn.Linear(64, 16),\n",
        "    nn.ReLU(),\n",
        "    nn.Linear(16, 10)\n",
        ")\n",
        "print(net)"
      ],
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Sequential(\n",
            "  (0): Flatten(start_dim=1, end_dim=-1)\n",
            "  (1): Linear(in_features=4096, out_features=64, bias=True)\n",
            "  (2): ReLU()\n",
            "  (3): Linear(in_features=64, out_features=16, bias=True)\n",
            "  (4): ReLU()\n",
            "  (5): Linear(in_features=16, out_features=10, bias=True)\n",
            ")\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qsW5zCKhQE9p"
      },
      "source": [
        "## 学習\n",
        "モデルを訓練します。  \n",
        "今回は、損失関数に交差エントロピー誤差を、最適化アルゴリズムにSGD（確率的勾配降下法）を設定します。  \n",
        "順伝播は訓練データ、テストデータ両者で行い誤差を計算します。  \n",
        "逆伝播を行うのは、訓練データのみです。  \n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "u6zwN3nArbGC",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7ce6240d-fd68-42c7-ce9d-d6dc1ecc64ae"
      },
      "source": [
        "from torch import optim\n",
        "\n",
        "# 交差エントロピー誤差関数\n",
        "loss_fnc = nn.CrossEntropyLoss()\n",
        "\n",
        "# SGD\n",
        "optimizer = optim.SGD(net.parameters(), lr=0.01)  # 学習率は0.01\n",
        "\n",
        "# 損失のログ\n",
        "record_loss_train = []\n",
        "record_loss_test = []\n",
        "\n",
        "# 1000エポック学習\n",
        "for i in range(1000):\n",
        "\n",
        "    # 勾配を0に\n",
        "    optimizer.zero_grad()\n",
        "    \n",
        "    # 順伝播\n",
        "    y_train = net(x_train)\n",
        "    y_test = net(x_test)\n",
        "    \n",
        "    # 誤差を求める\n",
        "    loss_train = loss_fnc(y_train, t_train)\n",
        "    loss_test = loss_fnc(y_test, t_test)\n",
        "    record_loss_train.append(loss_train.item())\n",
        "    record_loss_test.append(loss_test.item())\n",
        "\n",
        "    # 逆伝播（勾配を求める）\n",
        "    loss_train.backward()\n",
        "    \n",
        "    # パラメータの更新\n",
        "    optimizer.step()\n",
        "\n",
        "    if i%100 == 0:\n",
        "        print(\"Epoch:\", i, \"Loss_Train:\", loss_train.item(), \"Loss_Test:\", loss_test.item())"
      ],
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch: 0 Loss_Train: 21.177953720092773 Loss_Test: 20.807498931884766\n",
            "Epoch: 100 Loss_Train: 1.8124061822891235 Loss_Test: 1.8051491975784302\n",
            "Epoch: 200 Loss_Train: 1.5001462697982788 Loss_Test: 1.486937403678894\n",
            "Epoch: 300 Loss_Train: 1.2691136598587036 Loss_Test: 1.2516372203826904\n",
            "Epoch: 400 Loss_Train: 1.1050502061843872 Loss_Test: 1.0857634544372559\n",
            "Epoch: 500 Loss_Train: 0.9866142868995667 Loss_Test: 0.9677531719207764\n",
            "Epoch: 600 Loss_Train: 0.8989462852478027 Loss_Test: 0.8817757368087769\n",
            "Epoch: 700 Loss_Train: 0.835073709487915 Loss_Test: 0.8198840022087097\n",
            "Epoch: 800 Loss_Train: 0.7901163697242737 Loss_Test: 0.7766002416610718\n",
            "Epoch: 900 Loss_Train: 0.7590521574020386 Loss_Test: 0.7467151284217834\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "rJwwrWTw43rx"
      },
      "source": [
        "## 誤差の推移\n",
        "訓練データ、テストデータで誤差の推移をグラフ表示します。  "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OaJx4swE45XI",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "outputId": "c44bc4ae-d702-408e-daf4-219e78e98f15"
      },
      "source": [
        "plt.plot(range(len(record_loss_train)), record_loss_train, label=\"Train\")\n",
        "plt.plot(range(len(record_loss_test)), record_loss_test, label=\"Test\")\n",
        "plt.legend()\n",
        "\n",
        "plt.xlabel(\"Epochs\")\n",
        "plt.ylabel(\"Error\")\n",
        "plt.show()"
      ],
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "iMrpac0m4Nct"
      },
      "source": [
        "## 正解率\n",
        "モデルの性能を把握するため、テストデータ使い正解率を測定します。  "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IRkGCYMM_N35",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c573a7ba-e230-4a38-adf4-05c7b18a884d"
      },
      "source": [
        "y_test = net(x_test)\n",
        "count = (y_test.argmax(1) == t_test).sum().item()\n",
        "print(\"正解率:\", str(count/len(y_test)*100) + \"%\")"
      ],
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "正解率: 64.81481481481481%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LrRAJzwD4zpN"
      },
      "source": [
        "## 訓練済みのモデルを使った予測\n",
        "訓練済みのモデルを使ってみましょう。  \n",
        "画像を入力し、モデルが機能していることを確かめます。"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Pdy9nPckTDik",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 613
        },
        "outputId": "d8782db0-dbc8-42a4-e2ba-3cb6189158a6"
      },
      "source": [
        "img_id = 0\n",
        "x_pred = digit_images[img_id]\n",
        "image = x_pred.reshape(64, 64)\n",
        "plt.imshow(image, cmap=\"Greys_r\")\n",
        "plt.show()\n",
        "\n",
        "x_pred = torch.tensor(x_pred, dtype=torch.float32)\n",
        "y_pred = net(x_pred)\n",
        "print(\"正解:\", labels[img_id], \"予測結果:\", y_pred.argmax().item())"
      ],
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "error",
          "ename": "RuntimeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mRuntimeError\u001b[0m                              Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-60-3a8137d77116>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mx_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtensor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_pred\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfloat32\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0my_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnet\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"正解:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mimg_id\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"予測結果:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitem\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *input, **kwargs)\u001b[0m\n\u001b[1;32m   1049\u001b[0m         if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks\n\u001b[1;32m   1050\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1051\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1052\u001b[0m         \u001b[0;31m# Do not call functions when jit is used\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1053\u001b[0m         \u001b[0mfull_backward_hooks\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnon_full_backward_hooks\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/nn/modules/container.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, input)\u001b[0m\n\u001b[1;32m    137\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mforward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    138\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mmodule\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 139\u001b[0;31m             \u001b[0minput\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodule\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    140\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    141\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *input, **kwargs)\u001b[0m\n\u001b[1;32m   1049\u001b[0m         if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks\n\u001b[1;32m   1050\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1051\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1052\u001b[0m         \u001b[0;31m# Do not call functions when jit is used\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1053\u001b[0m         \u001b[0mfull_backward_hooks\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnon_full_backward_hooks\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/nn/modules/linear.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, input)\u001b[0m\n\u001b[1;32m     94\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     95\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mforward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mTensor\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mTensor\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 96\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mF\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlinear\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mweight\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbias\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     97\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     98\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mextra_repr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/nn/functional.py\u001b[0m in \u001b[0;36mlinear\u001b[0;34m(input, weight, bias)\u001b[0m\n\u001b[1;32m   1845\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mhas_torch_function_variadic\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mweight\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1846\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mhandle_torch_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlinear\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mweight\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mweight\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbias\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbias\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1847\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_C\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_nn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlinear\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mweight\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbias\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1848\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1849\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mRuntimeError\u001b[0m: mat1 and mat2 shapes cannot be multiplied (64x64 and 4096x64)"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "maAJN2wa0l1D"
      },
      "source": [
        "このような訓練済みのモデルは、別途保存しWebアプリなどで活用することができます。"
      ]
    }
  ]
}